[General]
network = RplNetwork

**.numNodes = ${numNodes = 40}
**.wifibitrate = ${wifiBitrate = 6Mbps, 12Mbps, 18Mbps}
**.wifichannel = ${wifiChannel = 0, 8}

**.rplHost[*].app[0].messageLength = ${payload=408B}

sim-time-limit = ${timeLimit = 1200s}
warmup-period = ${warmup = 0s, 300s}
repeat = 10

num-rngs = 3
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2

**.hasIpv6 = true
**.hasIpv4 = false
**.mtu = 1500B

**.neighbourDiscovery.raEnabled = false # Router Advertisements are not handled by RPL currently
**.neighbourDiscovery.addRandomDelays = true # To avoid infinite loops during runtime
# Avoid Duplicate Address Detection as it spawns a handful of redundnant messaging and doesn't cooperate with RPL currently
**.neighbourDiscovery.skipDad = true

# MAC
**.rplSink[*].wlan[*].mac.typename = "Ieee802154Mac"
**.rplHost[*].wlan[*].mac.typename = "Ieee802154Mac"

# RPL config
**.rplSink[*].rpl.isRoot = true
**.rplSink[*].rpl.storing = true
**.rpl.numDaoRetransmitAttempts = 10
**.rpl.daoEnabled = true
**.rpl.poisoning = false
**.rpl.useBackupAsPreferred = false
**.rpl.networkProtocolModule = "^.ipv6.ipv6"
**.rpl.routingTableModule = "^.ipv6.routingTable"
**.rpl.drawConnectors = true # show connection to the preferred parent visually

# nic settings
**.rplSink[*].wlan[*].bitrate = 2Mbps
**.rplHost[*].wlan[*].bitrate = 2Mbps
**.wifiSink[*].wlan[*].bitrate = 18Mbps
**.wifiHost[*].wlan[*].bitrate = 18Mbps


##### COEXISTENCE

# radio medium settings
*.radioMedium.analogModel.typename = "DimensionalAnalogModel"
*.radioMedium.backgroundNoise.typename = "IsotropicDimensionalBackgroundNoise"
*.radioMedium.backgroundNoise.powerSpectralDensity = -113dBmWpMHz

# radio settings
# 2452MHz/20MHz bw
*.wifi*.wlan[*].radio.typename = "Ieee80211DimensionalRadio"

*.wifiHost*.wlan[*].radio.transmitter.frequencyGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1MHz -20dB linear c-b*0.5+1MHz 0dB linear c+b*0.5-1MHz 0dB linear c+b*0.5+1MHz -20dB linear c+b -28dB linear c+b*1.5 -40dB right"
*.wifiSink*.wlan[*].radio.transmitter.frequencyGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1MHz -20dB linear c-b*0.5+1MHz 0dB linear c+b*0.5-1MHz 0dB linear c+b*0.5+1MHz -20dB linear c+b -28dB linear c+b*1.5 -40dB right"
*.rplSink*.wlan[*].radio.transmitter.frequencyGains = "left c-5MHz -40dB linear c-2MHz -20dB linear c-1MHz 0dB either c+1MHz 0dB linear c+2MHz -20dB linear c+5MHz -40dB right"
*.rplHost*.wlan[*].radio.transmitter.frequencyGains = "left c-5MHz -40dB linear c-2MHz -20dB linear c-1MHz 0dB either c+1MHz 0dB linear c+2MHz -20dB linear c+5MHz -40dB right"

*.*Sink*.wlan[*].radio.receiver.snirThresholdMode = "mean"
*.*Host*.wlan[*].radio.receiver.errorModel.snirMode = "mean"
*.*rplSink*.wlan[*].radio.receiver.snirThresholdMode = "mean"
*.*rplHost*.wlan[*].radio.receiver.errorModel.snirMode = "mean"

# default 2450MHz/2.8MHz bw
*.rplSink[*].wlan[*].typename = "Ieee802154NarrowbandInterface"
*.rplHost[*].wlan[*].typename = "Ieee802154NarrowbandInterface"
*.rplSink[*].wlan[*].radio.typename = "Ieee802154NarrowbandDimensionalRadio"
*.rplHost[*].wlan[*].radio.typename = "Ieee802154NarrowbandDimensionalRadio"


# wpan hosts app settings
**.rplHost[*].numApps = 1
**.rplHost[*].app[0].typename = "UdpBasicApp"
**.rplHost[*].app[0].localPort = -1
**.rplHost[*].app[0].packetName = "UDPData-wpan-"

# wifi hosts app settings
*.wifiHost*.numApps = 1
*.wifiHost*.app[*].typename = "UdpBasicApp"
*.wifiHost*.app[*].destAddresses = "wifiSink" + "[" + string(parentIndex()) + "]"
*.wifiHost*.app[*].destPort = 5000
*.wifiHost*.app[*].messageLength = 1000byte
*.wifiHost*.app[*].packetName = "UDPData-wifi"
*.wifiHost*.app[*].startTime = 50s + uniform(0.1us, 0.1s)
*.wifiHost*.app[*].sendInterval = 10ms

*.wifiSink*.numApps = 1
*.wifiSink*.app[*].typename = "UdpSink"
*.wifiSink*.app[*].localPort = 5000

# visualizer settings
*.visualizer.mediumVisualizer.displayTransmissions = true


[Config RPLOnly]
extends = TestUDP

*.wifi*.numApps = 0

[Config RPLWiFiChannelInfluence]
extends = TestUDP
*.wifi*.wlan[*].radio.channelNumber = ${wifiChannel}
**.rplHost[*].app[0].startTime = uniform(1s, 10s)
*.wifiHost*.app[*].startTime = uniform(0.1us, 0.1s)

**.wifiSink[*].wlan[*].bitrate = ${wifiBitrate}
**.wifiHost[*].wlan[*].bitrate = ${wifiBitrate}

**.app*.*.scalar-recording = true
**.app*.*.vector-recording = true
**.vector-recording = false
**.scalar-recording = false

[Config RPLWiFiChannel1to5]
extends = TestUDP
*.wifi*.wlan[*].radio.channelNumber = (ancestorIndex(2))%5
**.rplHost[*].app[0].startTime = uniform(1s, 10s)
*.wifiHost*.app[*].startTime = uniform(0.1us, 0.1s)

**.wifiSink[*].wlan[*].bitrate = ${wifiBitrate}
**.wifiHost[*].wlan[*].bitrate = ${wifiBitrate}

**.app*.*.scalar-recording = true
**.app*.*.vector-recording = true
**.vector-recording = false
**.scalar-recording = false

[Config RPLWiFiChannel1to11]
extends = TestUDP
*.wifi*.wlan[*].radio.channelNumber = (ancestorIndex(2))%11
**.rplHost[*].app[0].startTime = uniform(1s, 10s)
*.wifiHost*.app[*].startTime = uniform(0.1us, 0.1s)

*.rplSink[*].wlan[*].radio.centerFrequency = 2480MHz
*.rplHost[*].wlan[*].radio.centerFrequency = 2480MHz

**.wifiSink[*].wlan[*].bitrate = ${wifiBitrate}
**.wifiHost[*].wlan[*].bitrate = ${wifiBitrate}

**.app*.*.scalar-recording = true
**.app*.*.vector-recording = true
**.vector-recording = false
**.scalar-recording = false

# My Simulations
[Config TestUDP]

**.rplSink[*].wlan[*].bitrate = 250kbps
**.rplHost[*].wlan[*].bitrate = 250kbps 

**.rplHost[*].app[0].sendInterval = uniform(20s, 30s)
**.rplHost[*].app[0].destPort = 1000

**.rplSink[*].numApps = 1
**.rplSink[*].app[0].typename = "UdpSink"
**.rplSink[*].app[0].localPort = 1000

**.rpl.unreachabilityDetectionEnabled = false
**.rplHost[*].mobility.typename = "StationaryMobility"
**.rplSink[*].mobility.typename = "StationaryMobility"
**.displayCommunicationRange = true

# mobility and nodes' locations (for a single sink scenario)
**.mobility.constraintAreaMaxX = 5000m
**.mobility.constraintAreaMaxY = 5000m
**.mobility.constraintAreaMinX = -20m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinZ = 0m 
**.mobility.initFromDisplayString = false
**.rplSink[0].**.initialX = -5m
**.rplSink[0].**.initialY = 0m
**.rplHost[**].**.initialX = (parentIndex()%2)*12m 
**.rplHost[**].**.initialY = (floor(parentIndex()/2))*50m

#Odd nodes on one side of the road, even nodes on the other
**.wifiHost[**].**.initialX = (parentIndex()%2)*12m
**.wifiHost[**].**.initialY = (floor(parentIndex()/2)+1)*50m

**.wifiSink[**].**.initialX = (parentIndex()%2)*12m 
**.wifiSink[**].**.initialY = (floor(parentIndex()/2))*50m



